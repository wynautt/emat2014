apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'jetty'
apply plugin: 'eclipse'
apply plugin: 'idea'

//these create the 'provided' scope, mainly for the servlet dependency
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://download.java.net/maven/2"
        }
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:0.9.8'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.1'
    }
}


repositories {
    maven { url 'http://repo.spring.io/milestone/' }
    maven { url 'http://repo.spring.io/snapshot'  }
}

dependencies {
    compile 'joda-time:joda-time:2.3'
    compile 'com.google.guava:guava:16.0'
    compile 'com.googlecode.objectify:objectify:4.0b3'

    //compile "com.googlecode.objectify-appengine-spring:objectify-appengine-spring:1.1.1"

    /*
    compile 'org.springframework:spring-context:4.0.1.RELEASE'
    compile 'org.springframework:spring-web:4.0.1.RELEASE'
    compile 'org.springframework:spring-webmvc:4.0.1.RELEASE'
      */

    def springVersion = '3.2.7'
    compile "org.springframework:spring-core:${springVersion}.RELEASE"
    compile "org.springframework:spring-context:${springVersion}.RELEASE"
    compile "org.springframework:spring-web:${springVersion}.RELEASE"
    compile "org.springframework:spring-webmvc:${springVersion}.RELEASE"

    def springSecurityVersion = '3.2.0.RELEASE'
    compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-core:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-config:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-taglibs:${springSecurityVersion}"

    def springSocialVersion = '1.1.0.BUILD-SNAPSHOT'
    compile "org.springframework.social:spring-social-core:${springSocialVersion}"
    compile "org.springframework.social:spring-social-security:${springSocialVersion}"
    compile "org.springframework.social:spring-social-web:${springSocialVersion}"
    compile "org.springframework.social:spring-social-facebook:${springSocialVersion}"
    compile "org.springframework.social:spring-social-twitter:${springSocialVersion}"

    //compile "org.hibernate:hibernate-validator:5.1.0.Final"
    compile "org.hibernate:hibernate-validator:4.2.0.Final"


    //not compatible with GAE
    //compile "com.knappsack:swagger4spring-web:0.3.1"


    compile ("com.mangofactory:swagger-springmvc:0.6.6") {
        exclude group: "org.slf4j"
    }

    compile 'org.slf4j:slf4j-api:1.7.5'
    runtime 'org.slf4j:slf4j-jdk14:1.7.5'

    runtime 'com.fasterxml.jackson.core:jackson-core:2.2.2'
    runtime 'com.fasterxml.jackson.core:jackson-databind:2.2.2'
    runtime 'javax.xml.bind:jaxb-api:2.2.9'

    //provided 'javax.servlet:javax.servlet-api:3.+'
    provided 'javax.servlet:servlet-api:2.5'
    provided 'javax.servlet:jstl:1.2'

    def tomcatVersion = '7.0.42'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

    testCompile "org.springframework:spring-test:${springVersion}.RELEASE"
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'com.jayway.jsonpath:json-path:0.9.0'
    testCompile 'com.jayway.jsonpath:json-path-assert:0.9.0'
}

tomcatRunWar.contextPath = ''